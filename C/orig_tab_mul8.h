#define MAX_NUMBER 255
#define TOP_BIT 0x800
#define PRICTI 0x3
#define POSUN_VPRAVO 3
#define POCET_BITU 8

; // 0000 1000  0000 0...  
; //                   11  
; //       765  4321 0...  

; //       neni presne: 26178 (39.944458%), preteceni: 26178, podteceni: 0
; // neni zaokrouhleno: 5390 (8.224487%), preteceni: 0, podteceni: 5390
; // sum(tab_dif[]): 0, sum(abs(tab_dif[])): 0
; // (( 256 + a ) * ( 256 + b )) >> 2 = (tab_plus[a+b] - tab_minus[a-b]) >> 2 = (1m mmmm mmm.) OR (01 mmmm mmmm)
; // 0 <= a <= 255, 0 <= b <= 255

; // tab_minus[i] = (i*i)/4 +- 0x0
int tab_minus[MAX_NUMBER+1] = {  // [0..255]
0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0002,0x0002,0x0002,0x0002,0x0002,0x0003,0x0003,0x0003,0x0003,
0x0004,0x0004,0x0004,0x0004,0x0005,0x0005,0x0005,0x0005,0x0006,0x0006,0x0006,0x0007,0x0007,0x0007,0x0008,0x0008,
0x0009,0x0009,0x0009,0x000A,0x000A,0x000A,0x000B,0x000B,0x000C,0x000C,0x000D,0x000D,0x000E,0x000E,0x000F,0x000F,
0x0010,0x0010,0x0011,0x0011,0x0012,0x0012,0x0013,0x0013,0x0014,0x0014,0x0015,0x0015,0x0016,0x0017,0x0017,0x0018,
0x0019,0x0019,0x001A,0x001A,0x001B,0x001C,0x001C,0x001D,0x001E,0x001E,0x001F,0x0020,0x0021,0x0021,0x0022,0x0023,
0x0024,0x0024,0x0025,0x0026,0x0027,0x0027,0x0028,0x0029,0x002A,0x002B,0x002B,0x002C,0x002D,0x002E,0x002F,0x0030,
0x0031,0x0031,0x0032,0x0033,0x0034,0x0035,0x0036,0x0037,0x0038,0x0039,0x003A,0x003B,0x003C,0x003D,0x003E,0x003F,
0x0040,0x0041,0x0042,0x0043,0x0044,0x0045,0x0046,0x0047,0x0048,0x0049,0x004A,0x004B,0x004C,0x004D,0x004E,0x004F,
0x0051,0x0052,0x0053,0x0054,0x0055,0x0056,0x0057,0x0059,0x005A,0x005B,0x005C,0x005D,0x005F,0x0060,0x0061,0x0062,
0x0064,0x0065,0x0066,0x0067,0x0069,0x006A,0x006B,0x006C,0x006E,0x006F,0x0070,0x0072,0x0073,0x0074,0x0076,0x0077,
0x0079,0x007A,0x007B,0x007D,0x007E,0x007F,0x0081,0x0082,0x0084,0x0085,0x0087,0x0088,0x008A,0x008B,0x008D,0x008E,
0x0090,0x0091,0x0093,0x0094,0x0096,0x0097,0x0099,0x009A,0x009C,0x009D,0x009F,0x00A0,0x00A2,0x00A4,0x00A5,0x00A7,
0x00A9,0x00AA,0x00AC,0x00AD,0x00AF,0x00B1,0x00B2,0x00B4,0x00B6,0x00B7,0x00B9,0x00BB,0x00BD,0x00BE,0x00C0,0x00C2,
0x00C4,0x00C5,0x00C7,0x00C9,0x00CB,0x00CC,0x00CE,0x00D0,0x00D2,0x00D4,0x00D5,0x00D7,0x00D9,0x00DB,0x00DD,0x00DF,
0x00E1,0x00E2,0x00E4,0x00E6,0x00E8,0x00EA,0x00EC,0x00EE,0x00F0,0x00F2,0x00F4,0x00F6,0x00F8,0x00FA,0x00FC,0x00FE};

; // tab_plus[i] = ((256 + 256 + i) * (256 + 256 + i))/4 +- 0x0
int tab_plus[MAX_NUMBER+MAX_NUMBER+1] = {  // [0..510]
0x0400,0x0404,0x0408,0x040C,0x0410,0x0414,0x0418,0x041C,0x0420,0x0424,0x0428,0x042C,0x0430,0x0434,0x0438,0x043C,
0x0441,0x0445,0x0449,0x044D,0x0451,0x0455,0x0459,0x045E,0x0462,0x0466,0x046A,0x046E,0x0473,0x0477,0x047B,0x047F,
0x0484,0x0488,0x048C,0x0490,0x0495,0x0499,0x049D,0x04A1,0x04A6,0x04AA,0x04AE,0x04B3,0x04B7,0x04BB,0x04C0,0x04C4,
0x04C9,0x04CD,0x04D1,0x04D6,0x04DA,0x04DE,0x04E3,0x04E7,0x04EC,0x04F0,0x04F5,0x04F9,0x04FE,0x0502,0x0507,0x050B,
0x0510,0x0514,0x0519,0x051D,0x0522,0x0526,0x052B,0x052F,0x0534,0x0538,0x053D,0x0541,0x0546,0x054B,0x054F,0x0554,
0x0559,0x055D,0x0562,0x0566,0x056B,0x0570,0x0574,0x0579,0x057E,0x0582,0x0587,0x058C,0x0591,0x0595,0x059A,0x059F,
0x05A4,0x05A8,0x05AD,0x05B2,0x05B7,0x05BB,0x05C0,0x05C5,0x05CA,0x05CF,0x05D3,0x05D8,0x05DD,0x05E2,0x05E7,0x05EC,
0x05F1,0x05F5,0x05FA,0x05FF,0x0604,0x0609,0x060E,0x0613,0x0618,0x061D,0x0622,0x0627,0x062C,0x0631,0x0636,0x063B,
0x0640,0x0645,0x064A,0x064F,0x0654,0x0659,0x065E,0x0663,0x0668,0x066D,0x0672,0x0677,0x067C,0x0681,0x0686,0x068B,
0x0691,0x0696,0x069B,0x06A0,0x06A5,0x06AA,0x06AF,0x06B5,0x06BA,0x06BF,0x06C4,0x06C9,0x06CF,0x06D4,0x06D9,0x06DE,
0x06E4,0x06E9,0x06EE,0x06F3,0x06F9,0x06FE,0x0703,0x0708,0x070E,0x0713,0x0718,0x071E,0x0723,0x0728,0x072E,0x0733,
0x0739,0x073E,0x0743,0x0749,0x074E,0x0753,0x0759,0x075E,0x0764,0x0769,0x076F,0x0774,0x077A,0x077F,0x0785,0x078A,
0x0790,0x0795,0x079B,0x07A0,0x07A6,0x07AB,0x07B1,0x07B6,0x07BC,0x07C1,0x07C7,0x07CC,0x07D2,0x07D8,0x07DD,0x07E3,
0x07E9,0x07EE,0x07F4,0x07F9,0x07FF,0x0805,0x080A,0x0810,0x0816,0x081B,0x0821,0x0827,0x082D,0x0832,0x0838,0x083E,
0x0844,0x0849,0x084F,0x0855,0x085B,0x0860,0x0866,0x086C,0x0872,0x0878,0x087D,0x0883,0x0889,0x088F,0x0895,0x089B,
0x08A1,0x08A6,0x08AC,0x08B2,0x08B8,0x08BE,0x08C4,0x08CA,0x08D0,0x08D6,0x08DC,0x08E2,0x08E8,0x08EE,0x08F4,0x08FA,
0x0900,0x0906,0x090C,0x0912,0x0918,0x091E,0x0924,0x092A,0x0930,0x0936,0x093C,0x0942,0x0948,0x094E,0x0954,0x095A,
0x0961,0x0967,0x096D,0x0973,0x0979,0x097F,0x0985,0x098C,0x0992,0x0998,0x099E,0x09A4,0x09AB,0x09B1,0x09B7,0x09BD,
0x09C4,0x09CA,0x09D0,0x09D6,0x09DD,0x09E3,0x09E9,0x09EF,0x09F6,0x09FC,0x0A02,0x0A09,0x0A0F,0x0A15,0x0A1C,0x0A22,
0x0A29,0x0A2F,0x0A35,0x0A3C,0x0A42,0x0A48,0x0A4F,0x0A55,0x0A5C,0x0A62,0x0A69,0x0A6F,0x0A76,0x0A7C,0x0A83,0x0A89,
0x0A90,0x0A96,0x0A9D,0x0AA3,0x0AAA,0x0AB0,0x0AB7,0x0ABD,0x0AC4,0x0ACA,0x0AD1,0x0AD7,0x0ADE,0x0AE5,0x0AEB,0x0AF2,
0x0AF9,0x0AFF,0x0B06,0x0B0C,0x0B13,0x0B1A,0x0B20,0x0B27,0x0B2E,0x0B34,0x0B3B,0x0B42,0x0B49,0x0B4F,0x0B56,0x0B5D,
0x0B64,0x0B6A,0x0B71,0x0B78,0x0B7F,0x0B85,0x0B8C,0x0B93,0x0B9A,0x0BA1,0x0BA7,0x0BAE,0x0BB5,0x0BBC,0x0BC3,0x0BCA,
0x0BD1,0x0BD7,0x0BDE,0x0BE5,0x0BEC,0x0BF3,0x0BFA,0x0C01,0x0C08,0x0C0F,0x0C16,0x0C1D,0x0C24,0x0C2B,0x0C32,0x0C39,
0x0C40,0x0C47,0x0C4E,0x0C55,0x0C5C,0x0C63,0x0C6A,0x0C71,0x0C78,0x0C7F,0x0C86,0x0C8D,0x0C94,0x0C9B,0x0CA2,0x0CA9,
0x0CB1,0x0CB8,0x0CBF,0x0CC6,0x0CCD,0x0CD4,0x0CDB,0x0CE3,0x0CEA,0x0CF1,0x0CF8,0x0CFF,0x0D07,0x0D0E,0x0D15,0x0D1C,
0x0D24,0x0D2B,0x0D32,0x0D39,0x0D41,0x0D48,0x0D4F,0x0D56,0x0D5E,0x0D65,0x0D6C,0x0D74,0x0D7B,0x0D82,0x0D8A,0x0D91,
0x0D99,0x0DA0,0x0DA7,0x0DAF,0x0DB6,0x0DBD,0x0DC5,0x0DCC,0x0DD4,0x0DDB,0x0DE3,0x0DEA,0x0DF2,0x0DF9,0x0E01,0x0E08,
0x0E10,0x0E17,0x0E1F,0x0E26,0x0E2E,0x0E35,0x0E3D,0x0E44,0x0E4C,0x0E53,0x0E5B,0x0E62,0x0E6A,0x0E72,0x0E79,0x0E81,
0x0E89,0x0E90,0x0E98,0x0E9F,0x0EA7,0x0EAF,0x0EB6,0x0EBE,0x0EC6,0x0ECD,0x0ED5,0x0EDD,0x0EE5,0x0EEC,0x0EF4,0x0EFC,
0x0F04,0x0F0B,0x0F13,0x0F1B,0x0F23,0x0F2A,0x0F32,0x0F3A,0x0F42,0x0F4A,0x0F51,0x0F59,0x0F61,0x0F69,0x0F71,0x0F79,
0x0F81,0x0F88,0x0F90,0x0F98,0x0FA0,0x0FA8,0x0FB0,0x0FB8,0x0FC0,0x0FC8,0x0FD0,0x0FD8,0x0FE0,0x0FE8,0x0FF0};

